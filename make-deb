#!/bin/bash
# $Id: make-deb 1365 2012-04-21 19:21:13Z dreibh $
#
# Debian Packaging Scripts
# Copyright (C) 2002-2012 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@iem.uni-due.de

. ./debian.conf


# ---------------------------------------------------------------------------
# USAGE:
# ./make-deb default            => for Ubuntu REVU
#    Note: Replaces "Maintainer" by Ubuntu Developers and
#          writes original maintainer entry to "XSBC-Original-Maintainer"
# ./make-deb unstable           => for Debian Mentors
# ./make-deb natty|maverick|... => for Launchpad PPA
# ---------------------------------------------------------------------------


DISTRIBUTIONS=`\
( \
while [ x$1 != "x" ] ; do \
   echo $1 && \
   shift ; \
done \
) | sort -u`
if [ "$DISTRIBUTIONS" == "" ] ; then
   DISTRIBUTIONS="default"
fi


CHANGELOG_HEADER="`head -n1 debian/changelog`"

PACKAGE=`echo $CHANGELOG_HEADER | sed -e "s/(.*//" -e "s/ //g"`
PACKAGE_VERSION=`echo $CHANGELOG_HEADER | sed -e "s/[a-Z0-9 ]*(//" -e "s/).*//" -e "s/ //g" -e "s/^[0-9]*://"`
INPUT_DISTRIBUTION=`echo $CHANGELOG_HEADER | sed -e "s/[^)]*)//" -e "s/;.*//g" -e "s/ //g"`
UPSTREAM_VERSION=`echo $CHANGELOG_HEADER | sed -e "s/[a-Z0-9 ]*(//" -e "s/).*//" -e "s/[0-9]*$//" -e "s/ //g" -e "s/^[0-9]*://" -e "s/-[^ ]*$//g"`
OUTPUT_VERSION=`echo $CHANGELOG_HEADER | sed -e "s/[a-Z0-9 ]*(//" -e "s/).*//" -e "s/[0-9]*$//" -e "s/ //g" -e "s/^[0-9]*://"`
DEBIAN_VERSION=`echo $PACKAGE_VERSION | sed -e "s/ubuntu[0-9]//1"`


echo "######################################################################"
echo "CHANGELOG_HEADER:   $CHANGELOG_HEADER"
echo "PACKAGE:            $PACKAGE"
echo "INPUT_DISTRIBUTION: $INPUT_DISTRIBUTION"
echo "UPSTREAM_VERSION:   $UPSTREAM_VERSION"
echo "PACKAGE_VERSION     $PACKAGE_VERSION"
echo "OUTPUT_VERSION:     $OUTPUT_VERSION"
echo "DEBIAN_VERSION:     $DEBIAN_VERSION"
echo "######################################################################"


echo ""
echo "====== Calling wrap-and-sort =========================================="
echo ""
wrap-and-sort -a -v || exit 1


echo ""
echo "====== Creating upstream package ======================================"
echo ""
UPSTREAM_PACKAGE="`find . -name $PACKAGE-$UPSTREAM_VERSION.tar.gz`"
if [ "$UPSTREAM_PACKAGE" == "" ]; then
   rm -f $PACKAGE-*.gz $PACKAGE"_"*.gz
   echo Running "$MAKE_DIST" ...
   eval "$MAKE_DIST"
   UPSTREAM_PACKAGE="`find . -name $PACKAGE-*.gz`"
   echo ""
   echo "==> Upstream package is $UPSTREAM_PACKAGE"
   echo ""
   if [ ! -e $UPSTREAM_PACKAGE ] ; then
      echo "ERROR: No upstrem package found!"
      exit 1
   fi
fi


echo ""
echo "====== Creating packages =============================================="
for DISTRIBUTION in $DISTRIBUTIONS ; do

   echo ""
   echo "------ Creating package for $DISTRIBUTION ------"

   success=1
   cp ${UPSTREAM_PACKAGE} ${PACKAGE}_${UPSTREAM_VERSION}.orig.tar.gz && \
   cp ${UPSTREAM_PACKAGE} ${PACKAGE}_$OUTPUT_VERSION.orig.tar.gz && \
   cp ${UPSTREAM_PACKAGE} ${PACKAGE}_$DEBIAN_VERSION.orig.tar.gz && \
   rm -rf ${PACKAGE}-${UPSTREAM_VERSION} && \
   rm -rf ${PACKAGE}-${UPSTREAM_VERSION}.orig && \
   tar xzf ${UPSTREAM_PACKAGE} && \
   cp -r ${PACKAGE}-${UPSTREAM_VERSION} ${PACKAGE}-${UPSTREAM_VERSION}.orig && \
   cp -r debian ${PACKAGE}-${UPSTREAM_VERSION} && \
   find ${PACKAGE}-${UPSTREAM_VERSION} -name .svn | xargs --no-run-if-empty rm -rf && \
   cd ${PACKAGE}-${UPSTREAM_VERSION} && \
   success=0

   if [ $success -ne 0 ] ; then
      exit 1
   fi

   if [ "$DISTRIBUTION" != "default" ] ; then
      if [ "$DISTRIBUTION" = "unstable" -o "$DISTRIBUTION" = "testing" -o "$DISTRIBUTION" = "stable" ] ; then
         # Debian: Also remove Launchpad Bug IDs.
         sed -e "s/$INPUT_DISTRIBUTION;/$DISTRIBUTION;/1" \
             -e "s/ubuntu[0-9]//1" \
             -e "/(LP: #/D" \
             <debian/changelog | ../filter-empty-entries "$DEBIAN_LAST_ENTRY" >debian/changelog.new
      else
         # Ubuntu PPA
         # Naming example: 2.7.7-0ubuntu1~natty1~ppa0
         # Ubuntu: Also remove Debian Bug IDs.
         sed -e "s/$INPUT_DISTRIBUTION;/$DISTRIBUTION;/1" \
             -e "s/$PACKAGE_VERSION/$PACKAGE_VERSION~${DISTRIBUTION}1~ppa0/1" \
             -e "/(Closes: #/D" \
             <debian/changelog | ../filter-empty-entries "$UBUNTU_LAST_ENTRY" >debian/changelog.new

         # ------ Old distributions not supporting c++/regex style symbols --
         if [ "$DISTRIBUTION" = "dapper"   -o \
              "$DISTRIBUTION" = "edgy"     -o \
              "$DISTRIBUTION" = "feisty"   -o \
              "$DISTRIBUTION" = "hardy"    -o \
              "$DISTRIBUTION" = "intrepid" -o \
              "$DISTRIBUTION" = "jaunty"   -o \
              "$DISTRIBUTION" = "karmic"   -o \
              "$DISTRIBUTION" = "lucid" ] ; then
            # Just skip the symbols ...
            find debian/ -maxdepth 1 -name "*.symbols" | xargs --no-run-if-empty rm -f
         fi
      fi
      mv debian/changelog.new debian/changelog

      # ------ Old distributions not supporting new Debian format -----------
      if [ "$DISTRIBUTION" = "dapper"   -o \
           "$DISTRIBUTION" = "edgy"     -o \
           "$DISTRIBUTION" = "feisty"   -o \
           "$DISTRIBUTION" = "hardy"    -o \
           "$DISTRIBUTION" = "intrepid" -o \
           "$DISTRIBUTION" = "jaunty" ] ; then
         rm -rf debian/source
      fi
      # ---------------------------------------------------------------------
   else
      # Ubuntu: Remove Debian Bug IDs.
      sed -e "/(Closes: #/D" \
             <debian/changelog >debian/changelog.new
      mv debian/changelog.new debian/changelog
      sed -e "s/^Maintainer:/Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\nXSBC-Original-Maintainer:/g" <debian/control >debian/control.new
      mv debian/control.new debian/control
   fi

   echo ""
   echo "------ Creating diff file $PACKAGE-$PACKAGE_VERSION.diff.gz ------"
   (
      cd ..
      diff -urN "--exclude=*~" "--exclude=.svn" "--exclude=.git" \
         $PACKAGE-$UPSTREAM_VERSION.orig $PACKAGE-$UPSTREAM_VERSION \
         | gzip -c >$PACKAGE-$PACKAGE_VERSION.diff.gz
   )


   echo ""
   echo "------ Building source package ------"

   # Without signature:
   # debuild -us -uc
   # For sources:
   # debuild -S
   # For binaries:
   # debuild -b
   # Use -i to ignore .svn files!


   if [ "$SKIP_PACKAGE_SIGNING" != "" -a $SKIP_PACKAGE_SIGNING -eq 1 ] ; then
      # Build source package without signature:
      debuild -us -uc -S "-k$MAINTAINER" -i || exit 1
   else
      # Build source package including signature:
      debuild -sa -S "-k$MAINTAINER" -i || exit 1
   fi

   # Important: In /etc/pbuilderrc, set COMPONENTS="main universe"!
   # Important: After that, update with option "--override-config"!
   # sudo pbuilder update --override-config

   cd ..

   if [ "$DISTRIBUTION" = "unstable" -o \
        "$DISTRIBUTION" = "testing"  -o \
        "$DISTRIBUTION" = "stable"   -o \
        "$DISTRIBUTION" = "default" ] ; then
      if [ "$DISTRIBUTION" = "default" ] ; then
         version=${PACKAGE_VERSION}
      else
         version=${DEBIAN_VERSION}
      fi
      dscFile=`ls ${PACKAGE}_${version}.dsc | tail -n1`
   else
      dscFile=`ls ${PACKAGE}_${PACKAGE_VERSION}~${DISTRIBUTION}[0-9]~ppa[0-9].dsc | tail -n1`
   fi
   if [ ! -e $dscFile ] ; then
      echo "ERROR: $dscFile has not been generated successfully -> Aborting!"
      exit 1
   fi

done



if [ -e "$UPSTREAM_PACKAGE.asc" ] ; then
   rm -f "$UPSTREAM_PACKAGE.asc"
fi
if [ "$SKIP_PACKAGE_SIGNING" != "" -a ! $SKIP_PACKAGE_SIGNING -eq 1 ] ; then
   echo ""
   echo "====== Sign upstream package =========================================="
   echo ""
   echo "Signing upstream package $UPSTREAM_PACKAGE ..."
   gpg -sab "$UPSTREAM_PACKAGE"
fi



echo ""
echo "====== Command overview ==============================================="
echo ""

echo "Upload to PPA:"
for DISTRIBUTION in $DISTRIBUTIONS ; do
   if [ "$DISTRIBUTION" = "unstable" -o \
        "$DISTRIBUTION" = "testing"  -o \
        "$DISTRIBUTION" = "stable"   -o \
        "$DISTRIBUTION" = "default" ] ; then
      if [ "$DISTRIBUTION" = "default" ] ; then
         ppa="revu"
         version=${PACKAGE_VERSION}
      else
         ppa="mentors"
         version=${DEBIAN_VERSION}
      fi
      changesFile=`ls ${PACKAGE}_${version}_source.changes | tail -n1`
   else
      ppa="ppa"
      changesFile=`ls ${PACKAGE}_${PACKAGE_VERSION}~${DISTRIBUTION}[0-9]~ppa[0-9]_source.changes | tail -n1`
   fi
   echo "   dput $ppa $changesFile"
done
echo ""



if [ -e make-symbols ] ; then
   echo "################################################################"
   echo "Do not forget to run make-symbols after library version changes!"
   echo "################################################################"
   echo ""
fi

echo "Build Test Commands:"
for DISTRIBUTION in $DISTRIBUTIONS ; do
   if [ "$DISTRIBUTION" = "unstable" -o \
        "$DISTRIBUTION" = "testing"  -o \
        "$DISTRIBUTION" = "stable"   -o \
        "$DISTRIBUTION" = "default" ] ; then
      if [ "$DISTRIBUTION" = "default" ] ; then
         version=${PACKAGE_VERSION}
      else
         version=${DEBIAN_VERSION}
      fi
      changesFilesPattern="${PACKAGE}_${version}_*.changes"
      dscFile=`ls ${PACKAGE}_${version}.dsc | tail -n1`
   else
      changesFilesPattern="${PACKAGE}_${PACKAGE_VERSION}~${DISTRIBUTION}[0-9]~ppa[0-9]_*.changes"
      dscFile=`ls ${PACKAGE}_${PACKAGE_VERSION}~${DISTRIBUTION}[0-9]~ppa[0-9].dsc | tail -n1`
   fi
   echo "   sudo pbuilder build $dscFile && lintian -iIEv --pedantic /var/cache/pbuilder/result/$changesFilesPattern"
done
echo ""
