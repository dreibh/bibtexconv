#!/bin/bash
# $Id: make-deb 574 2010-06-19 10:38:17Z dreibh $
#
# Debian Packaging Scripts
# Copyright (C) 2002-2010 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@iem.uni-due.de


. ./debian.conf


# ---------------------------------------------------------------------------
# ATTENTION:
# debian/changelog MUST be like package (version-0ubuntu1); $INPUT_DISTRIBUTION
# "ubuntu" and "$INPUT_DISTRIBUTION" are exchanged by this script
#
# USAGE:
# ./make-deb default            => for Ubuntu REVU
#    Note: Replaces "Maintainer" by MOTU and writes original maintainer entry
#          to "XSBC-Original-Maintainer"
# ./make-deb unstable           => for Debian Mentors
# ./make-deb intrepid|hardy|... => for Launchpad PPA
# ---------------------------------------------------------------------------


DISTRIBUTIONS=`\
( \
while [ x$1 != "x" ] ; do \
   echo $1 && \
   shift ; \
done \
) | sort -u`
if [ "$DISTRIBUTIONS" == "" ] ; then
   DISTRIBUTIONS="default"
fi


echo ""
echo "====== Creating upstream package ======================================"
echo ""
UPSTREAM_PACKAGE="`find . -name $PACKAGE-*.gz`"
UPSTREAM_PACKAGES=`find . -name $PACKAGE-*.gz | wc --lines`
if [ "$UPSTREAM_PACKAGE" == "" ]; then
   rm -f $PACKAGE-*.gz $PACKAGE"_"*.gz
   echo Running "$MAKE_DIST" ...
   eval "$MAKE_DIST"
   UPSTREAM_PACKAGE="`find . -name $PACKAGE-*.gz`"
   echo ""
   echo "==> Upstream package is $UPSTREAM_PACKAGE"
   echo ""
   if [ ! -e $UPSTREAM_PACKAGE ] ; then
      echo "ERROR: No upstrem package found!"
      exit 1
   fi
elif [ $UPSTREAM_PACKAGES -ne 1 ] ; then
   echo "ERROR: There are multiple upstream packages (from \"make dist\")!" >&2
   echo "       Remove all except the actual version!" >&2
   exit 1
fi


echo ""
echo "====== Creating packages =============================================="
for DISTRIBUTION in $DISTRIBUTIONS ; do

   echo ""
   echo "------ Creating package for $DISTRIBUTION ------"

   VERSION=`ls $PACKAGE-*.gz|sed -e "s/$PACKAGE-//g" -e "s/.tar.gz//g"` && \
   rm -rf $PACKAGE-$VERSION $PACKAGE-$VERSION.orig && \
   tar xzf $INPUT/$PACKAGE-$VERSION.tar.gz && \
   cp -r $PACKAGE-$VERSION $PACKAGE-$VERSION.orig && \
   cd $PACKAGE-$VERSION && \
   cp -r $INPUT/debian . && \
   rm -rf debian/.svn || exit


   if [ "$DISTRIBUTION" != "default" ] ; then
      if [ "$DISTRIBUTION" = "unstable" -o "$DISTRIBUTION" = "testing" -o "$DISTRIBUTION" = "stable" ] ; then
         sed -e "s/$INPUT_DISTRIBUTION;/$DISTRIBUTION;/1" -e "s/ubuntu[0-9]//1" <debian/changelog >debian/changelog.new
      else
         sed -e "s/$INPUT_DISTRIBUTION;/$DISTRIBUTION;/1" -e "s/ubuntu/ubuntu-$DISTRIBUTION/1" <debian/changelog >debian/changelog.new
      fi
      mv debian/changelog.new debian/changelog
   else
      sed -e "s/^Maintainer:/Maintainer: Ubuntu MOTU Developers <ubuntu-motu@lists.ubuntu.com>\nXSBC-Original-Maintainer:/g" <debian/control >debian/control.new
      mv debian/control.new debian/control
   fi


   # Without signature!
   # debuild -us -uc
   # For sources:
   # debuild -S
   # For binaries:
   # debuild -b

   # Including signature!
   # debuild -sa -S -k'Thomas Dreibholz <dreibh@iem.uni-due.de>'
   debuild -sa -S "-k$MAINTAINER" -i   # -i to ignore .svn files!


   # Important: In /etc/pbuilderrc, set COMPONENTS="main universe"!
   # Important: After that, update with option "--override-config"!
   # sudo pbuilder update --override-config

   cd ..
done



echo ""
echo "====== Signing upstream package ======================================="
echo ""
if [ -e "$UPSTREAM_PACKAGE.asc" ] ; then
   rm -f "$UPSTREAM_PACKAGE.asc"
fi
echo "Signing upstream package $UPSTREAM_PACKAGE ..."
gpg -sab "$UPSTREAM_PACKAGE"



echo ""
echo "====== Command overview ==============================================="
echo ""

echo "Upload to PPA:"
for DISTRIBUTION in $DISTRIBUTIONS ; do
   if [ $DISTRIBUTION != "unstable" -a $DISTRIBUTION != "testing" -a $DISTRIBUTION != "stable" -a $DISTRIBUTION != "default" ] ; then
      echo "   dput ppa `ls $PACKAGE*$DISTRIBUTION*.changes`"
   fi
done
echo ""

echo "Build test:"
for DISTRIBUTION in $DISTRIBUTIONS ; do
   if [ $DISTRIBUTION = "unstable" -o $DISTRIBUTION = "testing" -o $DISTRIBUTION = "stable" ] ; then
      echo "   sudo pbuilder build `ls $PACKAGE*-[0-9].dsc`"
   else
      echo "   sudo pbuilder build `ls $PACKAGE*$DISTRIBUTION[0-9].dsc`"
   fi
done
echo ""
